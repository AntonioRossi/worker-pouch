!function l(Z,b,d){function m(i,G){if(!b[i]){if(!Z[i]){var X="function"==typeof require&&require;if(!G&&X)return X(i,!0);if(c)return c(i,!0);var u=new Error("Cannot find module '"+i+"'");throw u.code="MODULE_NOT_FOUND",u}var W=b[i]={exports:{}};Z[i][0].call(W.exports,function(l){var b=Z[i][1][l];return m(b?b:l)},W,W.exports,l,Z,b,d)}return b[i].exports}for(var c="function"==typeof require&&require,i=0;i<d.length;i++)m(d[i]);return m}({1:[function(l,Z,b){"use strict";Z.exports=l(3)},{3:3}],2:[function(l,Z,b){"use strict";Z.exports=function(Z){function b(l){var Z=d([l],{type:"text/javascript"});return m.createObjectURL(Z)}var d=l(7).createBlob,m="undefined"!=typeof URL?URL:webkitURL,c=d([atob(Z)],{type:"text/javascript"});return new Worker(b(c))}},{7:7}],3:[function(l,Z,b){"use strict";function d(l,Z){function b(l){var Z=l.messageId,b=l.type,d=l.content,m=L._callbacks[Z];return m?(X("receive message",L._name,Z,b,d),void("error"===b?(delete L._callbacks[Z],m(d)):"success"===b?(delete L._callbacks[Z],m(null,d)):L._changesListeners[Z](d))):void X("duplicate message (ignoring)",Z,b,d)}function d(l){l.data.id===L._name&&b(l.data)}function c(l,Z,b){var d=i();X("send message",L._socketId,d,l,Z),L._callbacks[d]=b;var m=W(Z);y.postMessage({id:L._name,type:l,messageId:d,args:m}),X("message sent",L._name,d)}function I(l,Z,b){X("send message",L._socketId,l,Z,b);var d=W(b);y.postMessage({id:L._name,type:Z,messageId:l,args:d}),X("message sent",L._name,l)}var L=this;if("string"==typeof l){var p=m.lastIndexOf(l,"/");l={url:l.substring(0,p),name:l.substring(p+1)}}else l=m.clone(l);if(X("constructor called",l),!l.name){var Y="Error: you must provide a database name.";return console.error(Y),Z(new Error(Y))}L.type=function(){return"socket"},L._id=V("id",function(l){c("id",[],l)}),L.compact=V("compact",function(l,Z){"function"==typeof l&&(Z=l,l={}),c("compact",[l],Z)}),L._info=function(l){c("info",[],l)},L.get=V("get",function(l,Z,b){"function"==typeof Z&&(b=Z,Z={}),c("get",[l,Z],b)}),L.remove=V("remove",function(l,Z,b,d){var m;"string"==typeof Z?(m={_id:l,_rev:Z},"function"==typeof b&&(d=b,b={})):(m=l,"function"==typeof Z?(d=Z,b={}):(d=b,b=Z));var i=m._rev||b.rev;c("remove",[m._id,i],d)}),L.getAttachment=V("getAttachment",function(l,Z,b,d){"function"==typeof b&&(d=b,b={}),c("getAttachment",[l,Z,b],d)}),L.removeAttachment=V("removeAttachment",function(l,Z,b,d){c("removeAttachment",[l,Z,b],d)}),L.putAttachment=V("putAttachment",function(l,Z,b,d,i,X){if("function"==typeof i&&(X=i,i=d,d=b,b=null),"undefined"==typeof i&&(i=d,d=b,b=null),"string"==typeof d){var u;try{u=atob(d)}catch(W){return X(G.error(G.BAD_ARG,"Attachments need to be base64 encoded"))}d=m.createBlob([m.binaryStringToArrayBuffer(u)],{type:i})}var V=[l,Z,b,d,i];c("putAttachment",V,X)}),L.put=V("put",m.getArguments(function(l){var Z,b,d,i=l.shift(),X="_id"in i,W=l.pop();return"object"!=typeof i||Array.isArray(i)?W(G.error(G.NOT_AN_OBJECT)):(i=m.clone(i),void u(i).then(function(){for(;;)if(Z=l.shift(),b=typeof Z,"string"!==b||X?"string"!==b||!X||"_rev"in i?"object"===b&&(d=m.clone(Z)):i._rev=Z:(i._id=Z,X=!0),!l.length)break;d=d||{},c("put",[i,d],W)})["catch"](W))})),L.post=V("post",function(l,Z,b){"function"==typeof Z&&(b=Z,Z={}),Z=m.clone(Z),c("post",[l,Z],b)}),L._bulkDocs=function(l,Z,b){c("bulkDocs",[l,Z],b)},L._allDocs=function(l,Z){"function"==typeof l&&(Z=l,l={}),c("allDocs",[l],Z)},L._changes=function(l){if(l=m.clone(l),l.continuous){var b=i();return L._changesListeners[b]=l.onChange,L._callbacks[b]=l.complete,I(b,"liveChanges",[l]),{cancel:function(){I(b,"cancelChanges",[])}}}var d="returnDocs"in l?l.returnDocs:!0;l.returnDocs=!0,c("changes",[l],function(b,m){return b?(l.complete(b),Z(b)):(m.results.forEach(function(Z){l.onChange(Z)}),d||(m.results=[]),l.complete(null,m),void Z(null,m))})},L.revsDiff=V("revsDiff",function(l,Z,b){"function"==typeof Z&&(b=Z,Z={}),c("revsDiff",[l,Z],b)}),L._query=V("query",function(l,Z,b){"function"==typeof Z&&(b=Z,Z={});var d=l;"function"==typeof l&&(d={map:l}),c("query",[d,Z],b)}),L._viewCleanup=V("viewCleanup",function(l){c("viewCleanup",[],l)}),L._close=function(l){l()},L.destroy=V("destroy",function(l,Z){"function"==typeof l&&(Z=l,l={}),c("destroy",[],function(l,b){return l?(L.emit("error",l),Z(l)):(y.removeEventListener("message",d),L.emit("destroyed"),L.constructor.emit("destroyed",L._name),void Z(null,b))})}),L._callbacks={},L._changesListeners={},L._name=l.originalName,y.addEventListener("message",d),c("createDatabase",[{name:L._name,auto_compaction:!!l.auto_compaction}],function(l){return l?Z(l):void Z(null,L)})}var m=l(7),c=l(4),i=l(8),G=l(5),X=l(11)("pouchdb:worker:client"),u=c.preprocessAttachments,W=c.stringifyArgs,V=c.adapterFun,I=l(2),y=I(l(9));d.valid=function(){return!0},Z.exports=d,"undefined"!=typeof window&&window.PouchDB&&window.PouchDB.adapter("worker",Z.exports)},{11:11,2:2,4:4,5:5,7:7,8:8,9:9}],4:[function(l,Z,b){(function(Z){"use strict";var d=l(7),m=l(11)("pouchdb:socket:client"),c="undefined"==typeof Z||Z.browser;b.preprocessAttachments=function(l){return l._attachments&&Object.keys(l._attachments)?d.Promise.all(Object.keys(l._attachments).map(function(Z){var b=l._attachments[Z];if(b.data&&"string"!=typeof b.data){if(c)return new d.Promise(function(l){d.readAsBinaryString(b.data,function(Z){b.data=btoa(Z),l()})});b.data=b.data.toString("base64")}})):d.Promise.resolve()},b.stringifyArgs=function(l){var Z=["filter","map","reduce"],b=["onChange","processChange","complete"],d=[];return l.forEach(function(l){if("object"==typeof l&&null!==l&&!Array.isArray(l)){Z.forEach(function(Z){Z in l&&"function"==typeof l[Z]&&(l[Z]={type:"func",func:l[Z].toString()})});var m={};Object.keys(l).forEach(function(Z){-1===b.indexOf(Z)&&(m[Z]=l[Z])}),l=m}d.push(l)}),d},b.padInt=function(l,Z){for(var b=l.toString();b.length<Z;)b="0"+b;return b},b.adapterFun=function(l,Z){function b(l,Z,b){if(m.enabled){for(var d=[l._db_name,Z],c=0;c<b.length-1;c++)d.push(b[c]);m.apply(null,d);var i=b[b.length-1];b[b.length-1]=function(b,d){var c=[l._db_name,Z];c=c.concat(b?["error",b]:["success",d]),m.apply(null,c),i(b,d)}}}return d.toPromise(d.getArguments(function(m){if(this._closed)return d.Promise.reject(new Error("database is closed"));var c=this;return b(c,l,m),this.taskqueue.isReady?Z.apply(this,m):new d.Promise(function(Z,b){c.taskqueue.addTask(function(d){d?b(d):Z(c[l].apply(c,m))})})}))}}).call(this,l(10))},{10:10,11:11,7:7}],5:[function(l,Z,b){"use strict";function d(l){Error.call(l.reason),this.status=l.status,this.name=l.error,this.message=l.reason,this.error=!0}var m=l(14);m(d,Error),d.prototype.toString=function(){return JSON.stringify({status:this.status,name:this.name,message:this.message})},b.UNAUTHORIZED=new d({status:401,error:"unauthorized",reason:"Name or password is incorrect."}),b.MISSING_BULK_DOCS=new d({status:400,error:"bad_request",reason:"Missing JSON list of 'docs'"}),b.MISSING_DOC=new d({status:404,error:"not_found",reason:"missing"}),b.REV_CONFLICT=new d({status:409,error:"conflict",reason:"Document update conflict"}),b.INVALID_ID=new d({status:400,error:"invalid_id",reason:"_id field must contain a string"}),b.MISSING_ID=new d({status:412,error:"missing_id",reason:"_id is required for puts"}),b.RESERVED_ID=new d({status:400,error:"bad_request",reason:"Only reserved document ids may start with underscore."}),b.NOT_OPEN=new d({status:412,error:"precondition_failed",reason:"Database not open"}),b.UNKNOWN_ERROR=new d({status:500,error:"unknown_error",reason:"Database encountered an unknown error"}),b.BAD_ARG=new d({status:500,error:"badarg",reason:"Some query argument is invalid"}),b.INVALID_REQUEST=new d({status:400,error:"invalid_request",reason:"Request was invalid"}),b.QUERY_PARSE_ERROR=new d({status:400,error:"query_parse_error",reason:"Some query parameter is invalid"}),b.DOC_VALIDATION=new d({status:500,error:"doc_validation",reason:"Bad special document member"}),b.BAD_REQUEST=new d({status:400,error:"bad_request",reason:"Something wrong with the request"}),b.NOT_AN_OBJECT=new d({status:400,error:"bad_request",reason:"Document must be a JSON object"}),b.DB_MISSING=new d({status:404,error:"not_found",reason:"Database not found"}),b.IDB_ERROR=new d({status:500,error:"indexed_db_went_bad",reason:"unknown"}),b.WSQ_ERROR=new d({status:500,error:"web_sql_went_bad",reason:"unknown"}),b.LDB_ERROR=new d({status:500,error:"levelDB_went_went_bad",reason:"unknown"}),b.FORBIDDEN=new d({status:403,error:"forbidden",reason:"Forbidden by design doc validate_doc_update function"}),b.INVALID_REV=new d({status:400,error:"bad_request",reason:"Invalid rev format"}),b.FILE_EXISTS=new d({status:412,error:"file_exists",reason:"The database could not be created, the file already exists."}),b.MISSING_STUB=new d({status:412,error:"missing_stub"}),b.error=function(l,Z,b){function m(Z){for(var d in l)"function"!=typeof l[d]&&(this[d]=l[d]);void 0!==b&&(this.name=b),void 0!==Z&&(this.reason=Z)}return m.prototype=d.prototype,new m(Z)},b.getErrorTypeByProp=function(l,Z,d){var m=b,c=Object.keys(m).filter(function(b){var d=m[b];return"function"!=typeof d&&d[l]===Z}),i=d&&c.filter(function(l){var Z=m[l];return Z.message===d})[0]||c[0];return i?m[i]:null},b.generateErrorFromResponse=function(l){var Z,d,m,c,i,G=b;return d=l.error===!0&&"string"==typeof l.name?l.name:l.error,i=l.reason,m=G.getErrorTypeByProp("name",d,i),l.missing||"missing"===i||"deleted"===i||"not_found"===d?m=G.MISSING_DOC:"doc_validation"===d?(m=G.DOC_VALIDATION,c=i):"bad_request"===d&&m.message!==i&&(0===i.indexOf("unknown stub attachment")?(m=G.MISSING_STUB,c=i):m=G.BAD_REQUEST),m||(m=G.getErrorTypeByProp("status",l.status,i)||G.UNKNOWN_ERROR),Z=G.error(m,i,d),c&&(Z.message=c),l.id&&(Z.id=l.id),l.status&&(Z.status=l.status),l.statusText&&(Z.name=l.statusText),l.missing&&(Z.missing=l.missing),Z}},{14:14}],6:[function(l,Z,b){"use strict";function d(l){return l instanceof ArrayBuffer||"undefined"!=typeof Blob&&l instanceof Blob}function m(l){if("function"==typeof l.slice)return l.slice(0);var Z=new ArrayBuffer(l.byteLength),b=new Uint8Array(Z),d=new Uint8Array(l);return b.set(d),Z}function c(l){return l instanceof ArrayBuffer?m(l):l.slice(0,l.size,l.type)}Z.exports=function i(l){var Z,b,m;if(!l||"object"!=typeof l)return l;if(Array.isArray(l)){for(Z=[],b=0,m=l.length;m>b;b++)Z[b]=i(l[b]);return Z}if(l instanceof Date)return l.toISOString();if(d(l))return c(l);Z={};for(b in l)if(Object.prototype.hasOwnProperty.call(l,b)){var G=i(l[b]);"undefined"!=typeof G&&(Z[b]=G)}return Z}},{}],7:[function(l,Z,b){(function(Z){"use strict";var d=l(16);b.lastIndexOf=function(l,Z){for(var b=l.length-1;b>=0;b--)if(l.charAt(b)===Z)return b;return-1},b.clone=l(6),b.once=function(l){var Z=!1;return b.getArguments(function(b){if(Z)throw console.trace(),new Error("once called  more than once");Z=!0,l.apply(this,b)})},b.getArguments=function(l){return function(){for(var Z=arguments.length,b=new Array(Z),d=-1;++d<Z;)b[d]=arguments[d];return l.call(this,b)}},b.toPromise=function(l){return b.getArguments(function(m){var c,i=this,G="function"==typeof m[m.length-1]?m.pop():!1;G&&(c=function(l,b){Z.nextTick(function(){G(l,b)})});var X=new d(function(Z,d){try{var c=b.once(function(l,b){l?d(l):Z(b)});m.push(c),l.apply(i,m)}catch(G){d(G)}});return c&&X.then(function(l){c(null,l)},c),X.cancel=function(){return this},X})},b.inherits=l(14),b.Promise=d;var m=l(15);b.createBlob=m.createBlob,b.readAsArrayBuffer=m.readAsArrayBuffer,b.readAsBinaryString=m.readAsBinaryString,b.binaryStringToArrayBuffer=m.binaryStringToArrayBuffer,b.arrayBufferToBinaryString=m.arrayBufferToBinaryString}).call(this,l(10))},{10:10,14:14,15:15,16:16,6:6}],8:[function(l,Z,b){"use strict";function d(l){return 0|Math.random()*l}function m(l,Z){Z=Z||c.length;var b="",m=-1;if(l){for(;++m<l;)b+=c[d(Z)];return b}for(;++m<36;)switch(m){case 8:case 13:case 18:case 23:b+="-";break;case 19:b+=c[3&d(16)|8];break;default:b+=c[d(16)]}return b}var c="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");Z.exports=m},{}],9:[function(l,Z,b){Z.exports="";
},{}],10:[function(l,Z,b){function d(){if(!G){G=!0;for(var l,Z=i.length;Z;){l=i,i=[];for(var b=-1;++b<Z;)l[b]();Z=i.length}G=!1}}function m(){}var c=Z.exports={},i=[],G=!1;c.nextTick=function(l){i.push(l),G||setTimeout(d,0)},c.title="browser",c.browser=!0,c.env={},c.argv=[],c.version="",c.versions={},c.on=m,c.addListener=m,c.once=m,c.off=m,c.removeListener=m,c.removeAllListeners=m,c.emit=m,c.binding=function(l){throw new Error("process.binding is not supported")},c.cwd=function(){return"/"},c.chdir=function(l){throw new Error("process.chdir is not supported")},c.umask=function(){return 0}},{}],11:[function(l,Z,b){function d(){return"WebkitAppearance"in document.documentElement.style||window.console&&(console.firebug||console.exception&&console.table)||navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31}function m(){var l=arguments,Z=this.useColors;if(l[0]=(Z?"%c":"")+this.namespace+(Z?" %c":" ")+l[0]+(Z?"%c ":" ")+"+"+b.humanize(this.diff),!Z)return l;var d="color: "+this.color;l=[l[0],d,"color: inherit"].concat(Array.prototype.slice.call(l,1));var m=0,c=0;return l[0].replace(/%[a-z%]/g,function(l){"%%"!==l&&(m++,"%c"===l&&(c=m))}),l.splice(c,0,d),l}function c(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)}function i(l){try{null==l?b.storage.removeItem("debug"):b.storage.debug=l}catch(Z){}}function G(){var l;try{l=b.storage.debug}catch(Z){}return l}function X(){try{return window.localStorage}catch(l){}}b=Z.exports=l(12),b.log=c,b.formatArgs=m,b.save=i,b.load=G,b.useColors=d,b.storage="undefined"!=typeof chrome&&"undefined"!=typeof chrome.storage?chrome.storage.local:X(),b.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],b.formatters.j=function(l){return JSON.stringify(l)},b.enable(G())},{12:12}],12:[function(l,Z,b){function d(){return b.colors[W++%b.colors.length]}function m(l){function Z(){}function m(){var l=m,Z=+new Date,c=Z-(u||Z);l.diff=c,l.prev=u,l.curr=Z,u=Z,null==l.useColors&&(l.useColors=b.useColors()),null==l.color&&l.useColors&&(l.color=d());var i=Array.prototype.slice.call(arguments);i[0]=b.coerce(i[0]),"string"!=typeof i[0]&&(i=["%o"].concat(i));var G=0;i[0]=i[0].replace(/%([a-z%])/g,function(Z,d){if("%%"===Z)return Z;G++;var m=b.formatters[d];if("function"==typeof m){var c=i[G];Z=m.call(l,c),i.splice(G,1),G--}return Z}),"function"==typeof b.formatArgs&&(i=b.formatArgs.apply(l,i));var X=m.log||b.log||console.log.bind(console);X.apply(l,i)}Z.enabled=!1,m.enabled=!0;var c=b.enabled(l)?m:Z;return c.namespace=l,c}function c(l){b.save(l);for(var Z=(l||"").split(/[\s,]+/),d=Z.length,m=0;d>m;m++)Z[m]&&(l=Z[m].replace(/\*/g,".*?"),"-"===l[0]?b.skips.push(new RegExp("^"+l.substr(1)+"$")):b.names.push(new RegExp("^"+l+"$")))}function i(){b.enable("")}function G(l){var Z,d;for(Z=0,d=b.skips.length;d>Z;Z++)if(b.skips[Z].test(l))return!1;for(Z=0,d=b.names.length;d>Z;Z++)if(b.names[Z].test(l))return!0;return!1}function X(l){return l instanceof Error?l.stack||l.message:l}b=Z.exports=m,b.coerce=X,b.disable=i,b.enable=c,b.enabled=G,b.humanize=l(13),b.names=[],b.skips=[],b.formatters={};var u,W=0},{13:13}],13:[function(l,Z,b){function d(l){if(l=""+l,!(l.length>1e4)){var Z=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(l);if(Z){var b=parseFloat(Z[1]),d=(Z[2]||"ms").toLowerCase();switch(d){case"years":case"year":case"yrs":case"yr":case"y":return b*V;case"days":case"day":case"d":return b*W;case"hours":case"hour":case"hrs":case"hr":case"h":return b*u;case"minutes":case"minute":case"mins":case"min":case"m":return b*X;case"seconds":case"second":case"secs":case"sec":case"s":return b*G;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return b}}}}function m(l){return l>=W?Math.round(l/W)+"d":l>=u?Math.round(l/u)+"h":l>=X?Math.round(l/X)+"m":l>=G?Math.round(l/G)+"s":l+"ms"}function c(l){return i(l,W,"day")||i(l,u,"hour")||i(l,X,"minute")||i(l,G,"second")||l+" ms"}function i(l,Z,b){return Z>l?void 0:1.5*Z>l?Math.floor(l/Z)+" "+b:Math.ceil(l/Z)+" "+b+"s"}var G=1e3,X=60*G,u=60*X,W=24*u,V=365.25*W;Z.exports=function(l,Z){return Z=Z||{},"string"==typeof l?d(l):Z["long"]?c(l):m(l)}},{}],14:[function(l,Z,b){"function"==typeof Object.create?Z.exports=function(l,Z){l.super_=Z,l.prototype=Object.create(Z.prototype,{constructor:{value:l,enumerable:!1,writable:!0,configurable:!0}})}:Z.exports=function(l,Z){l.super_=Z;var b=function(){};b.prototype=Z.prototype,l.prototype=new b,l.prototype.constructor=l}},{}],15:[function(l,Z,b){(function(l){"use strict";function b(Z,b){Z=Z||[],b=b||{};try{return new Blob(Z,b)}catch(d){if("TypeError"!==d.name)throw d;for(var m=l.BlobBuilder||l.MSBlobBuilder||l.MozBlobBuilder||l.WebKitBlobBuilder,c=new m,i=0;i<Z.length;i+=1)c.append(Z[i]);return c.getBlob(b.type)}}function d(l){for(var Z="",b=new Uint8Array(l),d=b.byteLength,m=0;d>m;m++)Z+=String.fromCharCode(b[m]);return Z}function m(l){for(var Z=l.length,b=new ArrayBuffer(Z),d=new Uint8Array(b),m=0;Z>m;m++)d[m]=l.charCodeAt(m);return b}function c(l,Z){var b=new FileReader,m="function"==typeof b.readAsBinaryString;b.onloadend=function(l){var b=l.target.result||"";return m?Z(b):void Z(d(b))},m?b.readAsBinaryString(l):b.readAsArrayBuffer(l)}function i(l,Z){var b=new FileReader;b.onloadend=function(l){var b=l.target.result||new ArrayBuffer(0);Z(b)},b.readAsArrayBuffer(l)}Z.exports={createBlob:b,readAsArrayBuffer:i,readAsBinaryString:c,binaryStringToArrayBuffer:m,arrayBufferToBinaryString:d}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],16:[function(l,Z,b){"use strict";Z.exports=l(17)},{17:17}],17:[function(l,Z,b){"use strict";Z.exports="function"==typeof Promise?Promise:l(18)},{18:18}],18:[function(l,Z,b){"use strict";function d(){}function m(l){if("function"!=typeof l)throw new TypeError("resolver must be a function");this.state=h,this.queue=[],this.outcome=void 0,l!==d&&X(this,l)}function c(l,Z,b){this.promise=l,"function"==typeof Z&&(this.onFulfilled=Z,this.callFulfilled=this.otherCallFulfilled),"function"==typeof b&&(this.onRejected=b,this.callRejected=this.otherCallRejected)}function i(l,Z,b){L(function(){var d;try{d=Z(b)}catch(m){return p.reject(l,m)}d===l?p.reject(l,new TypeError("Cannot resolve promise with itself")):p.resolve(l,d)})}function G(l){var Z=l&&l.then;return l&&"object"==typeof l&&"function"==typeof Z?function(){Z.apply(l,arguments)}:void 0}function X(l,Z){function b(Z){c||(c=!0,p.reject(l,Z))}function d(Z){c||(c=!0,p.resolve(l,Z))}function m(){Z(d,b)}var c=!1,i=u(m);"error"===i.status&&b(i.value)}function u(l,Z){var b={};try{b.value=l(Z),b.status="success"}catch(d){b.status="error",b.value=d}return b}function W(l){return l instanceof this?l:p.resolve(new this(d),l)}function V(l){var Z=new this(d);return p.reject(Z,l)}function I(l){function Z(l,Z){function d(l){i[Z]=l,++G!==m||c||(c=!0,p.resolve(u,i))}b.resolve(l).then(d,function(l){c||(c=!0,p.reject(u,l))})}var b=this;if("[object Array]"!==Object.prototype.toString.call(l))return this.reject(new TypeError("must be an array"));var m=l.length,c=!1;if(!m)return this.resolve([]);for(var i=new Array(m),G=0,X=-1,u=new this(d);++X<m;)Z(l[X],X);return u}function y(l){function Z(l){b.resolve(l).then(function(l){c||(c=!0,p.resolve(G,l))},function(l){c||(c=!0,p.reject(G,l))})}var b=this;if("[object Array]"!==Object.prototype.toString.call(l))return this.reject(new TypeError("must be an array"));var m=l.length,c=!1;if(!m)return this.resolve([]);for(var i=-1,G=new this(d);++i<m;)Z(l[i]);return G}var L=l(19),p={},Y=["REJECTED"],s=["FULFILLED"],h=["PENDING"];Z.exports=b=m,m.prototype["catch"]=function(l){return this.then(null,l)},m.prototype.then=function(l,Z){if("function"!=typeof l&&this.state===s||"function"!=typeof Z&&this.state===Y)return this;var b=new this.constructor(d);if(this.state!==h){var m=this.state===s?l:Z;i(b,m,this.outcome)}else this.queue.push(new c(b,l,Z));return b},c.prototype.callFulfilled=function(l){p.resolve(this.promise,l)},c.prototype.otherCallFulfilled=function(l){i(this.promise,this.onFulfilled,l)},c.prototype.callRejected=function(l){p.reject(this.promise,l)},c.prototype.otherCallRejected=function(l){i(this.promise,this.onRejected,l)},p.resolve=function(l,Z){var b=u(G,Z);if("error"===b.status)return p.reject(l,b.value);var d=b.value;if(d)X(l,d);else{l.state=s,l.outcome=Z;for(var m=-1,c=l.queue.length;++m<c;)l.queue[m].callFulfilled(Z)}return l},p.reject=function(l,Z){l.state=Y,l.outcome=Z;for(var b=-1,d=l.queue.length;++b<d;)l.queue[b].callRejected(Z);return l},b.resolve=W,b.reject=V,b.all=I,b.race=y},{19:19}],19:[function(l,Z,b){(function(l){"use strict";function b(){W=!0;for(var l,Z,b=V.length;b;){for(Z=V,V=[],l=-1;++l<b;)Z[l]();b=V.length}W=!1}function d(l){1!==V.push(l)||W||m()}var m,c=l.MutationObserver||l.WebKitMutationObserver;if(c){var i=0,G=new c(b),X=l.document.createTextNode("");G.observe(X,{characterData:!0}),m=function(){X.data=i=++i%2}}else if(l.setImmediate||"undefined"==typeof l.MessageChannel)m="document"in l&&"onreadystatechange"in l.document.createElement("script")?function(){var Z=l.document.createElement("script");Z.onreadystatechange=function(){b(),Z.onreadystatechange=null,Z.parentNode.removeChild(Z),Z=null},l.document.documentElement.appendChild(Z)}:function(){setTimeout(b,0)};else{var u=new l.MessageChannel;u.port1.onmessage=b,m=function(){u.port2.postMessage(0)}}var W,V=[];Z.exports=d}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}]},{},[1]);
